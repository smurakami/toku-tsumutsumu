// Generated by CoffeeScript 1.6.3
(function() {
  var Floor, GAME_HEIGHT, GAME_WIDTH, Score, TOKU_DEFAULT_Y, Toku, game, score, toku;

  enchant();

  GAME_WIDTH = 320;

  GAME_HEIGHT = 320;

  game = null;

  toku = null;

  score = null;

  Floor = enchant.Class.create(PhyBoxSprite, {
    initialize: function() {
      var surface;
      PhyBoxSprite.call(this, GAME_WIDTH - 20, 40, enchant.box2d.STATIC_SPRITE, 1.0, 1.0, 0.0, true);
      this.x = 10;
      this.y = GAME_HEIGHT - this.height / 2;
      surface = new Surface(this.width, this.height);
      surface.context.beginPath();
      surface.context.strokeRect(0, 0, this.width, this.height);
      this.image = surface;
      return game.rootScene.addChild(this);
    }
  });

  TOKU_DEFAULT_Y = 60;

  Toku = enchant.Class.create(PhyBoxSprite, {
    initialize: function(x, y) {
      if (x == null) {
        x = GAME_WIDTH / 2;
      }
      if (y == null) {
        y = TOKU_DEFAULT_Y;
      }
      console.log('hello');
      PhyBoxSprite.call(this, 32, 32, enchant.box2d.DYNAMIC_SPRITE, 1.0, 1.0, 0.4, false);
      this.position = {
        x: x,
        y: y
      };
      this.backgroundColor = 'red';
      return game.rootScene.addChild(this);
    },
    update: function() {}
  }, Score = enchant.Class.create(enchant.Label, {
    initialize: function() {
      enchant.Label.call(this, "徳×0");
      this.num = 0;
      this.y = 10;
      this.font = '32px sans-serif';
      this;
      return game.rootScene.addChild(this);
    },
    gain: function() {
      this.num++;
      return this.text = "徳×" + this.num;
    }
  }));

  window.onload = function() {
    game = enchant.Core(GAME_WIDTH, GAME_HEIGHT);
    game.fps = 30;
    game.onload = function() {
      var floor, world;
      world = new PhysicsWorld(0.0, 25);
      floor = new Floor();
      score = new Score();
      setTimeout(function() {
        return toku = new Toku();
      }, 200);
      game.rootScene.addEventListener('touchstart', function(e) {
        if (toku == null) {
          return;
        }
        return toku.position = {
          x: e.x,
          y: TOKU_DEFAULT_Y
        };
      });
      game.rootScene.addEventListener('touchmove', function(e) {
        if (toku == null) {
          return;
        }
        return toku.position = {
          x: e.x,
          y: TOKU_DEFAULT_Y
        };
      });
      game.rootScene.addEventListener('touchend', function() {
        if (toku == null) {
          return;
        }
        toku.setAwake(true);
        toku = null;
        score.gain();
        return setTimeout(function() {
          return toku = new Toku;
        }, 500);
      });
      return game.rootScene.onenterframe = function(e) {
        return world.step(game.fps);
      };
    };
    return game.start();
  };

}).call(this);
